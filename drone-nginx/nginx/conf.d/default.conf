# Handle connection upgrading.
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

# Establish the upstream to Drone.
upstream drone-server {
    server drone-server:8000;
}

server {
    listen 80;
    server_name localhost;

    # Proxy all requests to the Drone application.
    location / {
        access_log off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;

        proxy_pass http://drone-server;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_buffering off;

        chunked_transfer_encoding off;
    }

    # Handle WebSockets by catching all /ws (case-insensitive) and upgrade the connection.
    location ~* /ws {
        access_log off;
        proxy_pass http://drone-server;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 86400;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # # SSL Configuration
    # ssl on;
    # ssl_certificate /etc/nginx/ssl/example.com.crt;
    # ssl_certificate_key /etc/nginx/ssl/example.com.key;
    # ssl_trusted_certificate /etc/nginx/ssl/ca-certs.pem;
}